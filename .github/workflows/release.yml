name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: "Tag for the next release. Ex.: v5.0.0"

env:
  NEXT_RELEASE_TAG: ${{ github.event.inputs.tag }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write

jobs:
  release-script-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cd ./tools/release

    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - name: Cache Python venv
        uses: actions/cache@v3
        with:
          path: ./venv
          key: venv-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: |
          python3 -m venv venv
          . ./venv/bin/activate
          pip install -r requirements.txt
      - name: Run tests
        run: pytest --versbose -vv

  ada-update-versions:
    needs: release-script-test
    runs-on: ubuntu-latest
    if: ${{ needs.release-script-test.result == 'success' }}
    env:
      CXX: clang++-14
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - name: Restore Python venv (Release script) from cache
        uses: actions/cache@v3
        with:
          path: ./tools/release/venv
          key: venv-${{ hashFiles('tools/release/requirements.txt') }}
      - name: Prepare environment for the Release script
        run: . ./tools/release/venv/bin/activate
      - name: Update versions
      - run: ./tools/release/update_versions.py

      - name: Ada Build
        run: cmake -B build && cmake --build build
      - name: Ada Test
        run: ctest --output-on-failure --test-dir build

      - name: Push updates for new release
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          git add ./doxygen \
                  ./include/ada/ada_version.h \
                  ./CMakeLists.txt

          git commit -m "New Release: ${{ env.NEXT_RELEASE_TAG }}"
          git push origin HEAD:${{ github.head_ref }}

  release:
    needs: ada-update-versions
    runs-on: ubuntu-latest
    if: ${{ needs.ada-update-versions.result == 'success' }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - name: Restore Python venv (Release script) from cache
        uses: actions/cache@v3
        with:
          path: ./tools/release/venv
          key: venv-${{ hashFiles('tools/release/requirements.txt') }}
      
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - name: Amalgamation
        run: |
<<<<<<< Updated upstream
          ./singleheader/amalgamate.py 
          zip singleheader.zip ada.cpp ada.h
=======
          ./singleheader/amalgamate.py && zip singleheader.zip ./singleheader/ada.cpp ./singleheader/ada.h
>>>>>>> Stashed changes
      
      - name: Prepare environment for the Release script
        run: . ./tools/release/venv/bin/activate
      - name: "Create Release"
        run: ./tools/release/create_release.py
